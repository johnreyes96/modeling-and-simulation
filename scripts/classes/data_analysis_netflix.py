# -*- coding: utf-8 -*-
"""DataAnalysisNetflix.ipynb

Automatically generated by Colaboratory.

# Analisis exploratorio Data Set Netflix

**¿Qué es el análisis de datos exploratorios?**

El análisis exploratorio de datos (EDA para abreviar) es lo que hacen los analistas de datos con grandes conjuntos de datos, buscando patrones y resumiendo las características principales del conjunto de datos más allá de lo que aprenden del modelado y la prueba de hipótesis. EDA es una filosofía que permite a los analistas de datos acercarse a una base de datos sin suposiciones. Cuando un analista de datos emplea EDA, es como si le estuvieran pidiendo a los datos que les dijeran lo que no saben.

Es un enfoque para el análisis de datos, que utiliza estas técnicas:

1. Maximice los conocimientos sobre un conjunto de datos.
2. Descubra las estructuras subyacentes.
3. Extraer variables importantes.
4. Detectar valores atípicos y anomalías.
5. Pruebe los supuestos subyacentes.
6. Determinar la configuración óptima de los factores.

## **Proyecto**

1. **Descargue y cargue el conjunto de datos**
2. **Importar e instalar las bibliotecas requeridas**
3. **Preparación y limpieza de datos**
4. **Hacer y responder preguntas sobre los datos a través de la visualización**
5. **Resume y escribe una conclusión**

## Descargar el Data Set

#### Aqui se puede descargar :- https://www.kaggle.com/shivamb/netflix-shows
"""

"""### Cargar Librerias"""

import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
import seaborn as sns
import matplotlib.pyplot as plt
import folium
import matplotlib

"""### Cargar Data Set"""

netflix_df = pd.read_csv('../../data/netflix_titles.csv')

# Lets check first 5 data points to get some idea about the kind of the data we are dealing with
print(netflix_df.head())

# Obtener más información sobre el tipo de datos de la columna número de valores faltantes del método data.info()

print(netflix_df.info())

# Convertir date_added al formato de fecha
netflix_df["date_added"] = pd.to_datetime(netflix_df["date_added"].str.strip())

# Comprobación de valores nulos
print(netflix_df.isnull().sum())

"""
**Podemos ver que faltan valores presentes en la columna director, elenco, país y muchos más
O podemos reemplazar los valores que faltan o podemos eliminar esas columnas
Aquí estoy reemplazando los valores faltantes para la columna de director y país**
"""

# Reemplazar valores faltantes
netflix_df["director"].fillna("missing", inplace=True)
netflix_df["country"].fillna("missisng", inplace=True)

print(netflix_df.isnull().sum())

netflix_df.dropna(inplace=True)

print(netflix_df.isnull().sum())

# Cambiando el nombre de la columna list_in a Género
netflix_df.rename(columns={"listed_in": "genre"}, inplace=True)

# Convertir múltiples géneros de películas en un solo género
netflix_df['genre'] = netflix_df['genre'].apply(lambda x: x.split(",")[0])

print(netflix_df.head())

# Creando columna de año y mes
netflix_df["Year_added"] = netflix_df['date_added'].dt.year
netflix_df["Month_added"] = netflix_df['date_added'].dt.month

print(netflix_df.info())

print(netflix_df.head())

netflix_df.drop(axis=1, columns=["cast", "date_added"], inplace=True)

print(netflix_df.head(9))

# Cálculo total de películas y programas de televisión en cada país

country_number = {}


def count_countries(one_row):
    country_list = one_row.split(",")

    for value in country_list:
        value = value.lower()
        if value in country_number.keys():
            count = country_number[value] + 1
            country_number[value] = count
        else:
            country_number[value] = 1


print(netflix_df["country"].apply(count_countries))

print(country_number.pop('missisng'))

country = []
number = []
for key, val in country_number.items():
    country.append(key)
    number.append(val)

country_n = {"country": country,
             "number": number}

country_df = pd.DataFrame.from_dict(country_n)

print(country_df)

location = pd.read_csv('../../data/location_countries.csv')

location = location.loc[:, ["latitude", "longitude", "name"]]

location["country"] = location["name"].str.lower()

print(location)

country_df_map = location.merge(country_df, on="country", how="inner")

print(country_df_map)

# Países donde está presente netflix

m = folium.Map(location=[0, 0], zoom_start=2)
tooltip = "Click me!"
for index, row in country_df_map.iterrows():
    folium.Marker([row['latitude'], row['longitude']], popup=row["number"], tooltip=tooltip).add_to(m)

print(m)

print(netflix_df.head())


# Encontrar el número de temporadas para programas de televisión

def season_split(season):
    if "Seasons" in season:
        season_list.append(season.split(" ")[0])
    elif "Season" in season:
        season_list.append(season.split(" ")[0])
    else:
        season_list.append(0)


season_list = []
print(netflix_df["duration"].apply(season_split))

netflix_df["seasons"] = season_list

print(netflix_df.head())

"""# Exploracion de datos"""

print(netflix_df.head())

"""# 1. ¿Cuál es la proporción de películas y programas de televisión en Netflix?"""

distribution = netflix_df["type"].value_counts()
fig = px.pie(values=distribution.values, names=["Movies", "Tv Shows"])
fig.show()

"""
**Información de la visualización:**
A partir de la visualización, podemos ver que el 71 % del contenido de Netflix son películas, por lo que Netflix tiene más películas en comparación con los programas de televisión en un 40 %.
"""

# 2. Distribución de Rating en Netflix

df_rating = netflix_df["rating"].value_counts().reset_index()

fig = px.bar(df_rating, y='rating', x='count', title='Distribution of Rating',
             color_discrete_sequence=['red'], text='count')
fig.update_xaxes(showgrid=False)
fig.update_yaxes(showgrid=False, categoryorder='total ascending', ticksuffix=' ', showline=False)
fig.update_traces(hovertemplate=None, marker=dict(line=dict(width=0)))
fig.update_layout(margin=dict(t=80, b=0, l=70, r=40),
                  hovermode="y unified",
                  xaxis_title=' ', yaxis_title=" ", height=400,
                  plot_bgcolor='#333', paper_bgcolor='#333',
                  title_font=dict(size=25, color='#8a8d93', family="Lato, sans-serif"),
                  font=dict(color='#8a8d93'),
                  legend=dict(orientation="h", yanchor="bottom", y=1, xanchor="center", x=0.5),
                  hoverlabel=dict(bgcolor="black", font_size=13, font_family="Lato, sans-serif"))
fig.show()

"""
**Información de la visualización:**
A partir de la visualización, podemos ver que la mayoría del contenido de Netflix es para audiencias maduras con un recuento de programas de 2879."""

# 3. Distribución de películas y programas de televisión en EE. UU., India, Canadá, Sudáfrica, Reino Unido, Japón

list_of_countries = ["united states", "india", "japan", "canada", "south africa", "united kingdom", "japan"]
filt = country_df["country"].isin(list_of_countries)
df_country_list = country_df.loc[filt,]

fig = px.bar(df_country_list, x="number", y="country", orientation="h")
fig.show()

print(df_country_list)

"""
**Información de la visualización:**
De la visualización podemos ver que EE. UU. tiene la mayor cantidad de contenido sobre más de 2800 seguido de India cerca de 1000"""

# 4. Año en que los programas o películas son agregados

netflix_df["Year_added"].value_counts()
df_years = netflix_df.groupby(["Year_added"]).size().reset_index(name='counts')
fig = px.line(df_years, x="Year_added", y="counts", title="Content Added Over the Year")
fig.show()

"""
**Información de la visualización:**
Desde la Visualización podemos ver que la cantidad de contenidos agregados aumentó durante el tiempo de pandemia, 2019 se agregaron alrededor de 1850 nuevos contenidos durante este año."""

# 5. Diferencia de crecimiento de películas y programas de televisión a lo largo de los años.

d1 = netflix_df[netflix_df["type"] == "TV Show"]
d2 = netflix_df[netflix_df["type"] == "Movie"]

col = "Year_added"

vc1 = d1[col].value_counts().reset_index()
vc1['percent'] = vc1['count'].apply(lambda x: 100 * x / vc1['count'].sum())
vc1 = vc1.sort_values(col)

vc2 = d2[col].value_counts().reset_index()
vc2['percent'] = vc2['count'].apply(lambda x: 100 * x / sum(vc2['count']))
vc2 = vc2.sort_values(col)

trace1 = go.Scatter(x=vc1[col], y=vc1["count"], name="TV Shows", marker=dict(color="#a678de"))
trace2 = go.Scatter(x=vc2[col], y=vc2["count"], name="Movies", marker=dict(color="#6ad49b"))
data = [trace1, trace2]
layout = go.Layout(title="Difference of Content added over the years", legend=dict(x=0.1, y=1.1, orientation="h"))
fig = go.Figure(data, layout=layout)
fig.show()

"""**Información de la visualización:**
Desde la visualización podemos ver que hay mucha diferencia entre el nuevo contenido de programas de televisión y las películas del año 2017.
"""

# 6. Distribución entre el género
df_genre = netflix_df["genre"].value_counts().reset_index()

df_genre["content"] = "All"

fig = px.treemap(df_genre,
                 path=["content", 'count', 'genre'])

fig.update_layout(title='Highest watched Geners on Netflix',
                  title_font=dict(size=25, color='#fff', family="Lato, sans-serif"),
                  plot_bgcolor='#333', paper_bgcolor='#333')
fig.show()

"""
**Información de la visualización:**
De la Visualización podemos ver que Netflix tiene más cantidad de Crimen y género stand-up con el conteo de 333"""

# 7. Cuál es el mejor mes para lanzar el contenido

fig = px.histogram(netflix_df, x="Month_added")
fig.update_layout(bargap=0.2, title="Movie Added over the Months")
fig.show()

"""**Información de la visualización:**
Desde la visualización podemos ver que casi todos los meses tienen una distribución equitativa de contenido, pero durante los meses de diciembre y julio se agregan más contenidos nuevos.
"""

# 8. Contar la cantidad de temporadas de programas de televisión

matplotlib.rcParams['font.size'] = 14
matplotlib.rcParams['figure.figsize'] = (12, 8)
matplotlib.rcParams['figure.facecolor'] = '#00000000'

sns.set_style(style="darkgrid")

filt = netflix_df["seasons"] != 0

netflix_season = netflix_df.loc[filt]

sns.countplot(x="seasons", data=netflix_season)
plt.title("Distribution of Seasons of TV show");

"""
**Información de la visualización:**
Desde la visualización podemos ver que alrededor de 1500 programas de televisión tienen solo una temporada y hay programas de televisión con más de 8 temporadas en los programas de televisión de Netflix."""

# 9. Los 15 mejores directores de películas y programas de televisión.

print(netflix_df)

filt = netflix_df["type"] == "TV Show"
filt2 = netflix_df["type"] == "Movie"

df_movie_director = netflix_df.loc[filt,]
df_tv_director = netflix_df.loc[filt2,]

df_movie = df_movie_director["director"].value_counts().reset_index()
df_tv = df_tv_director["director"].value_counts().reset_index()

df_tv.drop(index=0, inplace=True)
df_movie.drop(index=0, inplace=True)

df_top_movie = df_movie.sort_values(by="count", ascending=False).head(15)
df_top_tv = df_tv.sort_values(by="count", ascending=False).head(15)

fig = px.bar(data_frame=df_top_movie, x="count", y="director")
fig.show()

"""
**Información de la visualización:**
De la Visualización podemos ver que netflix tiene más películas dirigidas por Alastair Fothergill."""

fig = px.bar(data_frame=df_top_tv, x="count", y="director")
fig.show()

"""**Información de la visualización:**
De la visualización podemos ver que netflix tiene más programas de televisión dirigidos por Raúl Campos, Netflix tiene 18 programas dirigidos por él.

## Conclusión

1. Netflix se usa en la mayoría de los países, EE. UU. e India son los dos principales usuarios de Netflix.
2. Desde la época de Pandemia, Netflix agregó más contenido en comparación con otros años.
3. Netflix tiene más películas que programas de televisión
4. Netflix tiene programas de televisión con más de 8 temporadas.
"""
